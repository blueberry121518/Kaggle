{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":5397019,"sourceType":"datasetVersion","datasetId":2914576}],"dockerImageVersionId":30646,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/blueberry1215/wine-s-best-formula-revealed?scriptVersionId=169671277\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"# <center> Wine's Best Formula: Revealed <center>\n    \n<div style=\"width:100%;text-align: center;\"> <img align=middle src=\"https://gracewinecompany.com/wp-content/uploads/2022/11/GraceWineBack.jpg\" alt=\"Heat beating\" style=\"height:400px;margin-top:0rem;\"> </div>\n\n\n","metadata":{}},{"cell_type":"markdown","source":"<div style=\"padding:10px; \n            color:black;\n            margin:10px;\n            font-size:150%;\n            display:fill;\n            border-radius:1px;\n            border-style: solid;\n            border-color:black;\n            background-color:#bfac77;\n            overflow:hidden;\">\n    <center>\n        <a id='top'></a>\n        <b style=\"color:black\">Table of Contents</b>\n    </center>\n    <br>\n    <ul>\n        <li>\n            <a href=\"#1\" style=\"color:black\">1 - Imports</a>\n        </li>\n        <li>\n            <a href=\"#2\" style=\"color:black\">2 - A look into the data</a>\n            <ul>\n                <li>\n                    <a href=\"#2-1\" style=\"color:black\">2.1 - Data visualization</a>\n                </li>\n            </ul>\n        </li>\n        <li>\n            <a href=\"#3\" style=\"color:black\">3 - Scaling Data</a>\n        </li>\n        <li>\n            <a href=\"#4\" style=\"color:black\">4 - Dimensional Reduction</a>\n</li>\n<li>\n<a href=\"#5\" style=\"color:black\">5 - Clustering</a>\n    <ul>\n                <li>\n                    <a href=\"#5-1\" style=\"color:black\">2.1 - K-means Clustering using Elbow Method</a>\n                </li>\n            </ul>\n    <ul>\n                <li>\n                    <a href=\"#5-2\" style=\"color:black\">2.1 - Hierarchical Clustering</a>\n                </li>\n            </ul>\n</li>\n<li>\n<a href=\"#6\" style=\"color:black\">6 - Cluster Analysis</a>\n    <ul>\n                <li>\n                    <a href=\"#6-1\" style=\"color:black\">2.1 - Cluster Visualization</a>\n                </li>\n            </ul>\n    <ul>\n                <li>\n                    <a href=\"#6-2\" style=\"color:black\">2.1 - Numerical Analysis</a>\n                </li>\n            </ul>\n    <ul>\n                <li>\n                    <a href=\"#6-3\" style=\"color:black\">2.1 - Variable Visualization by Cluster</a>\n                </li>\n            </ul>\n</li>\n<li>\n<a href=\"#7\" style=\"color:black\">7 - Conclusion</a>\n</li>\n</ul>\n\n</div>\n","metadata":{}},{"cell_type":"markdown","source":"<a id=\"1\"></a>\n<h1 style='background:#bfac77;border:0; color:black;\n    box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);\n    transform: rotateX(10deg);\n    '><center style='color: black;'>Imports</center></h1>\n","metadata":{}},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom matplotlib import colors\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.decomposition import PCA\nfrom scipy.cluster.hierarchy import dendrogram, linkage, fcluster\nfrom yellowbrick.cluster import KElbowVisualizer\nfrom sklearn.cluster import KMeans\nfrom sklearn.cluster import AgglomerativeClustering\nimport warnings\nimport sys\nif not sys.warnoptions:\n    warnings.simplefilter(\"ignore\")\n\n# Read in csv file\ndf = pd.read_csv(\"/kaggle/input/wine-quality-data/Wine_Quality_Data.csv\")\n","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-03-09T02:13:29.524055Z","iopub.execute_input":"2024-03-09T02:13:29.52446Z","iopub.status.idle":"2024-03-09T02:13:29.552716Z","shell.execute_reply.started":"2024-03-09T02:13:29.524427Z","shell.execute_reply":"2024-03-09T02:13:29.551362Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"<a id=\"2\"></a>\n<h1 style='background:#bfac77;border:0; color:black;\n    box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);\n    transform: rotateX(10deg);\n    '><center style='color: black;'>A look into the data</center></h1>","metadata":{}},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-03-09T02:13:29.55453Z","iopub.execute_input":"2024-03-09T02:13:29.554881Z","iopub.status.idle":"2024-03-09T02:13:29.568161Z","shell.execute_reply.started":"2024-03-09T02:13:29.554854Z","shell.execute_reply":"2024-03-09T02:13:29.566939Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-03-09T02:13:29.569621Z","iopub.execute_input":"2024-03-09T02:13:29.570031Z","iopub.status.idle":"2024-03-09T02:13:29.594834Z","shell.execute_reply.started":"2024-03-09T02:13:29.569975Z","shell.execute_reply":"2024-03-09T02:13:29.593703Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.describe()","metadata":{"execution":{"iopub.status.busy":"2024-03-09T02:13:29.596858Z","iopub.execute_input":"2024-03-09T02:13:29.597436Z","iopub.status.idle":"2024-03-09T02:13:29.653667Z","shell.execute_reply.started":"2024-03-09T02:13:29.597391Z","shell.execute_reply":"2024-03-09T02:13:29.652415Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"The data in this dataset is all numerical except for the color of the wine. Since red and white wine differ greatly, using cluster analysis would end up just splitting into two clusters based on color. Therefore, for more accurate results, I will be doing analysis on the wine seperately.","metadata":{}},{"cell_type":"code","source":"# Seperating red wine\nred_wine = df[df[\"color\"] == \"red\"]\nred_wine = red_wine.drop(\"color\", axis = 1)\nred_wine.describe()\n\n# Removing data that interferred with clustering\nred_wine = red_wine.drop([1079, 1081, 1244, 1434, 1435, 1474, 1476, 94, 396, 400, 553, 1129])","metadata":{"execution":{"iopub.status.busy":"2024-03-09T02:13:29.656513Z","iopub.execute_input":"2024-03-09T02:13:29.657062Z","iopub.status.idle":"2024-03-09T02:13:29.694596Z","shell.execute_reply.started":"2024-03-09T02:13:29.657029Z","shell.execute_reply":"2024-03-09T02:13:29.69367Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Seperating white wine\nwhite_wine = df[df[\"color\"] == \"white\"]\nwhite_wine = white_wine.drop(\"color\", axis = 1)\nwhite_wine.describe()","metadata":{"execution":{"iopub.status.busy":"2024-03-09T02:13:29.69598Z","iopub.execute_input":"2024-03-09T02:13:29.696281Z","iopub.status.idle":"2024-03-09T02:13:29.748583Z","shell.execute_reply.started":"2024-03-09T02:13:29.696256Z","shell.execute_reply":"2024-03-09T02:13:29.747469Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"For this analysis, I will be doing it on white wine. If you are interested, just change white_wine to red_wine and you will get results on red_wine.","metadata":{}},{"cell_type":"code","source":"wine = white_wine","metadata":{"execution":{"iopub.status.busy":"2024-03-09T02:13:29.749932Z","iopub.execute_input":"2024-03-09T02:13:29.750227Z","iopub.status.idle":"2024-03-09T02:13:29.755555Z","shell.execute_reply.started":"2024-03-09T02:13:29.7502Z","shell.execute_reply":"2024-03-09T02:13:29.754289Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"The difference between the makeup of red wine versus white wine is extremely different so I will be doing unsupervised learning on them seperately.","metadata":{}},{"cell_type":"markdown","source":"<a name=\"2-1\"></a>\n## Data Visualization\n","metadata":{}},{"cell_type":"code","source":"# Heat map of correlation between variables\ncmap = colors.ListedColormap([\"#682F2F\", \"#9E726F\", \"#D6B2B1\", \"#B9C0C9\", \"#9F8A78\", \"#F3AB60\"])\ncorrmat = wine.corr()\nplt.figure(figsize=(20,20)) \nsns.heatmap(corrmat, annot = True, cmap = cmap, center = 0)","metadata":{"execution":{"iopub.status.busy":"2024-03-09T02:13:29.756931Z","iopub.execute_input":"2024-03-09T02:13:29.757239Z","iopub.status.idle":"2024-03-09T02:13:30.889815Z","shell.execute_reply.started":"2024-03-09T02:13:29.757214Z","shell.execute_reply":"2024-03-09T02:13:30.888713Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Simply by looking at this correlation heat map, I can see that most of the variables have a near 0 correlation to quality. This shows that the variables don't individually have a big effect on the resulting quality. However, the correlation between alcohol and quality as well as density and quality is strong. The numbers show that a lighter wine as well as higher alcohol content is correlated with better overall quality","metadata":{}},{"cell_type":"markdown","source":"<a id=\"3\"></a>\n<h1 style='background:#bfac77;border:0; color:black;\n    box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);\n    transform: rotateX(10deg);\n    '><center style='color: black;'>Scaling Data</center></h1>","metadata":{}},{"cell_type":"code","source":"# Scaling data before reducing dimensions\nscaler = StandardScaler()\nscaler.fit(wine)\nscaled = pd.DataFrame(scaler.transform(wine),columns = wine.columns)\n\n# Scaled data\nscaled.head()","metadata":{"execution":{"iopub.status.busy":"2024-03-09T02:13:30.891555Z","iopub.execute_input":"2024-03-09T02:13:30.892268Z","iopub.status.idle":"2024-03-09T02:13:30.917877Z","shell.execute_reply.started":"2024-03-09T02:13:30.892225Z","shell.execute_reply":"2024-03-09T02:13:30.916691Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"<a id=\"4\"></a>\n<h1 style='background:#bfac77;border:0; color:black;\n    box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);\n    transform: rotateX(10deg);\n    '><center style='color: black;'>Dimensional Reduction</center></h1>","metadata":{}},{"cell_type":"code","source":"pca = PCA(n_components = 3)\npca.fit(scaled)\nPCA = pd.DataFrame(pca.transform(scaled), columns=([\"col1\",\"col2\", \"col3\"]))\nPCA.describe().T","metadata":{"execution":{"iopub.status.busy":"2024-03-09T02:13:30.919153Z","iopub.execute_input":"2024-03-09T02:13:30.91945Z","iopub.status.idle":"2024-03-09T02:13:30.989485Z","shell.execute_reply.started":"2024-03-09T02:13:30.919424Z","shell.execute_reply":"2024-03-09T02:13:30.987835Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Plotting the data on the new axis\nx = PCA[\"col1\"]\ny = PCA[\"col2\"]\nz = PCA[\"col3\"]\nfig = plt.figure(figsize=(8,8))\nax = fig.add_subplot(111, projection = \"3d\")\nax.scatter(x,y,z, c = \"maroon\", marker = \"o\" )\nax.set_title(\"A 3D Projection Of Data In The Reduced Dimension\")\nax.set_xlabel(\"PCA 1\")\nax.set_ylabel(\"PCA 2\")\nax.set_zlabel(\"PCA 3\")\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-03-09T02:13:30.995603Z","iopub.execute_input":"2024-03-09T02:13:31.001497Z","iopub.status.idle":"2024-03-09T02:13:31.426899Z","shell.execute_reply.started":"2024-03-09T02:13:31.001418Z","shell.execute_reply":"2024-03-09T02:13:31.425932Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"<a id=\"5\"></a>\n<h1 style='background:#bfac77;border:0; color:black;\n    box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);\n    transform: rotateX(10deg);\n    '><center style='color: black;'>Clustering</center></h1>","metadata":{}},{"cell_type":"markdown","source":"<a name=\"5-1\"></a>\n## K-means Clustering using Elbow Method\n","metadata":{}},{"cell_type":"code","source":"# Determining how many clusters to make\nElbow_M = KElbowVisualizer(KMeans(), k=10)\nElbow_M.fit(PCA)\nElbow_M.show()","metadata":{"execution":{"iopub.status.busy":"2024-03-09T02:13:31.428197Z","iopub.execute_input":"2024-03-09T02:13:31.42877Z","iopub.status.idle":"2024-03-09T02:13:45.360436Z","shell.execute_reply.started":"2024-03-09T02:13:31.428735Z","shell.execute_reply":"2024-03-09T02:13:45.35933Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Determined that 5 clusters are to be made\nAC = AgglomerativeClustering(n_clusters = 5)\n\n# Add clusters to data\nPCA[\"clusters_k\"] = AC.fit_predict(PCA) + 1\nwine[\"clusters_k\"] = PCA[\"clusters_k\"]","metadata":{"execution":{"iopub.status.busy":"2024-03-09T02:13:45.361679Z","iopub.execute_input":"2024-03-09T02:13:45.362001Z","iopub.status.idle":"2024-03-09T02:13:46.198071Z","shell.execute_reply.started":"2024-03-09T02:13:45.361973Z","shell.execute_reply":"2024-03-09T02:13:46.196925Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"fig = plt.figure(figsize=(10,8))\nax = plt.subplot(111, projection='3d', label=\"bla\")\nax.scatter(PCA[\"col1\"], PCA[\"col2\"], PCA[\"col3\"], s = 40, c = PCA[\"clusters_k\"], marker = 'o', cmap = cmap)\nax.set_title(\"Clusters in reduced dimension\")\nax.set_xlabel(\"PCA 1\")\nax.set_ylabel(\"PCA 2\")\nax.set_zlabel(\"PCA 3\")\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-03-09T02:13:46.202155Z","iopub.execute_input":"2024-03-09T02:13:46.202518Z","iopub.status.idle":"2024-03-09T02:13:46.593345Z","shell.execute_reply.started":"2024-03-09T02:13:46.202487Z","shell.execute_reply":"2024-03-09T02:13:46.592179Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"<a name=\"5-2\"></a>\n## Hierarchical Clustering","metadata":{}},{"cell_type":"code","source":"# Hierarchical Clustering\nPCA = PCA[PCA[\"col1\"] < 6.77]\nZ = linkage(PCA, method='complete', metric='chebyshev')","metadata":{"execution":{"iopub.status.busy":"2024-03-09T02:13:46.594777Z","iopub.execute_input":"2024-03-09T02:13:46.59512Z","iopub.status.idle":"2024-03-09T02:13:47.377607Z","shell.execute_reply.started":"2024-03-09T02:13:46.595092Z","shell.execute_reply":"2024-03-09T02:13:47.376558Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Determining cutoff\ncutoff = 6\nwhile True:\n    labels = fcluster(Z, cutoff, criterion='distance')\n    if len(np.unique(labels)) == 5:\n        break\n    else:\n        cutoff += .1\nPCA[\"clusters_h\"] = labels\nwine[\"clusters_h\"] = PCA[\"clusters_h\"]\nplt.figure(figsize = (10, 5))\ndendrogram(Z)\nplt.title('Hierarchical Clustering Dendrogram')\nplt.xlabel('Index')\nplt.ylabel('Distance')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-03-09T02:13:47.379002Z","iopub.execute_input":"2024-03-09T02:13:47.379303Z","iopub.status.idle":"2024-03-09T02:15:33.559021Z","shell.execute_reply.started":"2024-03-09T02:13:47.379276Z","shell.execute_reply":"2024-03-09T02:15:33.557744Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"<a id=\"6\"></a>\n<h1 style='background:#bfac77;border:0; color:black;\n    box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);\n    transform: rotateX(10deg);\n    '><center style='color: black;'>Cluster Analysis</center></h1>","metadata":{}},{"cell_type":"markdown","source":"<a name=\"6-1\"></a>\n## Cluster Visualization\n","metadata":{}},{"cell_type":"code","source":"clusters = [\"clusters_k\", \"clusters_h\"]\nfor cluster in clusters:\n    fig = plt.figure(figsize=(8, 6))\n    figgy = plt.figure(figsize=(15, 5))\n    ax = fig.add_subplot(111, projection='3d')\n    ax1 = figgy.add_subplot(131)\n    ax2 = figgy.add_subplot(132)\n    ax3 = figgy.add_subplot(133)\n    for cluster_label in np.unique(PCA[cluster]):\n        cluster_points = PCA[PCA[cluster] == cluster_label]\n        ax.scatter(cluster_points[\"col1\"], cluster_points[\"col2\"], cluster_points[\"col3\"], label = f'Cluster {cluster_label}')\n        ax1.scatter(cluster_points[\"col1\"], cluster_points[\"col2\"])\n        ax2.scatter(cluster_points[\"col1\"], cluster_points[\"col3\"])\n        ax3.scatter(cluster_points[\"col2\"], cluster_points[\"col3\"])\n    if cluster != \"clusters_k\":\n        ax.set_title('Hierarchical Clustering of data on PCA')\n    else:\n        ax.set_title('K-means Clustering of data on PCA')\n    ax.set_xlabel('PCA 1')\n    ax.set_ylabel('PCA 2')\n    ax.set_zlabel('PCA 3')\n    ax1.set_xlabel('PCA 1')\n    ax1.set_ylabel('PCA 2')\n    ax2.set_xlabel('PCA 1')\n    ax2.set_ylabel('PCA 3')\n    ax3.set_xlabel('PCA 2')\n    ax3.set_ylabel('PCA 3')\n    ax.legend()\n    plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-03-09T02:15:33.560749Z","iopub.execute_input":"2024-03-09T02:15:33.561282Z","iopub.status.idle":"2024-03-09T02:15:35.979742Z","shell.execute_reply.started":"2024-03-09T02:15:33.561242Z","shell.execute_reply":"2024-03-09T02:15:35.978568Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Ignoring the outliers, the clusters look compact which shows signs of similarity between points in each cluster. However, there seems to be a lot of overlap as well which might cause low dissimilarity between clusters. ","metadata":{}},{"cell_type":"code","source":"# Tallying the number of points in each cluster\nfor cluster in clusters:\n    pl = sns.countplot(x = PCA[cluster], palette = [\"blue\", \"green\", \"red\", \"orange\", \"yellow\"])\n    if(cluster == \"clusters_k\"):\n        pl.set_title(\"Distribution Of The K-mean Clusters\")\n    else:\n        pl.set_title(\"Distribution Of The Hierarchical Clusters\")\n    plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-03-09T02:15:35.981247Z","iopub.execute_input":"2024-03-09T02:15:35.981573Z","iopub.status.idle":"2024-03-09T02:15:36.406494Z","shell.execute_reply.started":"2024-03-09T02:15:35.981544Z","shell.execute_reply":"2024-03-09T02:15:36.405385Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"wine[wine[\"clusters_h\"] == 4]","metadata":{"execution":{"iopub.status.busy":"2024-03-09T02:15:36.408027Z","iopub.execute_input":"2024-03-09T02:15:36.40845Z","iopub.status.idle":"2024-03-09T02:15:36.456595Z","shell.execute_reply.started":"2024-03-09T02:15:36.40841Z","shell.execute_reply":"2024-03-09T02:15:36.45524Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"<a name=\"6-2\"></a>\n## Numerical Analysis\n","metadata":{}},{"cell_type":"code","source":"# Displaying the mean for each variable in each cluster\nfor cluster in clusters:\n    for i in range(1, int(max(np.unique(wine[cluster])) + 1)):\n        if cluster == \"clusters_k\":\n            print(f\"\\nCluster {i} using K-means clustering\\n\")\n        else:\n            print(f\"\\nCluster {i} using hierarchical clustering\\n\")\n        print(wine[wine[cluster] == i].mean().T)","metadata":{"execution":{"iopub.status.busy":"2024-03-09T02:18:45.149106Z","iopub.execute_input":"2024-03-09T02:18:45.149529Z","iopub.status.idle":"2024-03-09T02:18:45.182854Z","shell.execute_reply.started":"2024-03-09T02:18:45.149495Z","shell.execute_reply":"2024-03-09T02:18:45.181497Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Clearly from the means, we can see that each cluster while looking different on the graphs, they have super similar data points. This might be because of the clear overlap between clusters. Other than hierarchical cluster 4, all the clusters have similar qualities with an average around 5.8. Each variable mean is also around the same number across clusters. \nHowever, just the mean doesn't give an accurate representation of the clusters. We can use violin plots to visualize the distribution of data points in each cluster for each variable.","metadata":{}},{"cell_type":"markdown","source":"<a name=\"6-3\"></a>\n## Variable Visualization by Cluster\n","metadata":{}},{"cell_type":"code","source":"traits = [\"quality\", \"alcohol\", \"residual_sugar\", \"total_sulfur_dioxide\", \"fixed_acidity\"]\nfor cluster in clusters:\n    for trait in traits:\n        plt.figure(figsize = (15,15))\n        sns.violinplot(x = wine[cluster], y = wine[trait])\n        plt.show()","metadata":{"execution":{"iopub.status.busy":"2024-03-09T02:15:36.49068Z","iopub.execute_input":"2024-03-09T02:15:36.490998Z","iopub.status.idle":"2024-03-09T02:15:40.933098Z","shell.execute_reply.started":"2024-03-09T02:15:36.49097Z","shell.execute_reply":"2024-03-09T02:15:40.931871Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"In every single graph, the clusters seem to have near identical distributions. This shows strong similarity between the clusters. ","metadata":{}},{"cell_type":"markdown","source":"<a id=\"7\"></a>\n<h1 style='background:#bfac77;border:0; color:black;\n    box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);\n    transform: rotateX(10deg);\n    '><center style='color: black;'>Conclusion</center></h1>","metadata":{}},{"cell_type":"markdown","source":"Why did we get clusters that are so similar that they don't show any conclusions? Is it because we did the PCA incorrectly? Is it a problem with the clustering method used? Maybe an average linkage should've been used for hierarchical clustering instead. Or maybe, there are no distinct clusters at all!\n\nEven with using two differen clustering techniques, there was no unique clusters found. However, good clustering doesn't necessarily result in distinct clusters. Depending on the data used used, its possible that there are no compact clusters that stand out from the rest. Thus, the similarity between clusters does allow us to come to a conclusion and this conclusion does make a lot of sense in this context.\n\nWine is made from fermented grapes. The cost of wine is caused by its rarity, which come with the length of time it takes to ferment. \"Good\" wine is then defined as very old wine. However, quality, doesn't necessarily increase as the age of the wine increases. While quality sounds like an objective measure, it is a subjective measure that depends on an individual's taste. \n\nTherefore, there is no \"best formula\" because one's favorite might be another's least liked. Everyone's familiar with the phenomenon of people preferring cheaper wines over more expensive ones. Some sweet wines might be highly rated causing us to believe that sweeter wines are better. However, there might be wines that aren't sweet at all that are rated just as high. The clustering done in this notebook has shown that there isn't a single change that can objectivly raise the \"quality\" of the wine. Wine is simply an edible item that caters to specific tastes. ","metadata":{}}]}